<?php
/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen
Date:			11/30/2017
Description:	This is a viewmodel for blog home. It does not represent a database table, but rather a composite type
*/



class Bloghome {

    // This is for local purposes only! In hosted environments the db_settings.php file should be outside of the webroot, such as: include("/outside-webroot/db_settings.php");
    protected static function getDbSettings() { return "DAL/db_localsettings.php"; }

    /******************************************************************/
    // Properties
    /******************************************************************/

    protected $blogId;
    protected $username;
    protected $title;
    protected $content;
    protected $imgUrl;
    protected $createDate;
    protected $blogCategoryId;


    /******************************************************************/
    // Constructors
    /******************************************************************/
    public function __construct() {
        $argv = func_get_args();
        switch( func_num_args() ) {
            case 0:
                self::__constructBase();
                break;
            case 7:
                self::__constructFull( $argv[0], $argv[1], $argv[2], $argv[3], $argv[4], $argv[5], $argv[6] );
        }
    }


    public function __constructBase() {
        $this->blogId = 0;
        $this->username = "";
        $this->title = "";
        $this->content = "";
        $this->imgUrl = "";
        $this->createDate = "";
        $this->blogCategoryId = 0;
    }

    public function __constructFull($paramBlogId,$paramUsername,$paramTitle,$paramContent,$paramImgUrl,$paramCreateDate,$paramBlogCategoryId) {
        $this->blogId = $paramBlogId;
        $this->username = $paramUsername;
        $this->title = $paramTitle;
        $this->content = $paramContent;
        $this->imgUrl = $paramImgUrl;
        $this->createDate = $paramCreateDate;
        $this->blogCategoryId = $paramBlogCategoryId;
    }


    /******************************************************************/
    // Accessors / Mutators
    /******************************************************************/

    public function getBlogId(){
        return $this->blogId;
    }
    public function setBlogId($value){
        $this->blogId = $value;
    }
    public function getUsername(){
        return $this->username;
    }
    public function setUsername($value){
        $this->username = $value;
    }
    public function getTitle(){
        return $this->title;
    }
    public function setTitle($value){
        $this->title = $value;
    }
    public function getContent(){
        return $this->content;
    }
    public function setContent($value){
        $this->content = $value;
    }
    public function getImgUrl(){
        return $this->imgUrl;
    }
    public function setImgUrl($value){
        $this->imgUrl = $value;
    }
    public function getCreateDate(){
        return $this->createDate;
    }
    public function setCreateDate($value){
        $this->createDate = $value;
    }
    public function getBlogCategoryId(){
        return $this->blogCategoryId;
    }
    public function setBlogCategoryId($value){
        $this->blogCategoryId = $value;
    }

    // Static functions

    private static function setNullValue($value){
        if ($value == "")
            return null;
        else
            return $value;
    }

    public static function loadBlogHome($paramContent,$paramBlogCategoryId,$paramOffset) {
        include(self::getDbSettings());
        $conn = new mysqli($servername, $username, $password, $dbname);
        $stmt = $conn->prepare('CALL usp_Blog_LoadBlogHome(?,?,?)');
        $arg1 = Bloghome::setNullValue($paramContent);
        $arg2 = Bloghome::setNullValue($paramBlogCategoryId);
        $arg3 = Bloghome::setNullValue($paramOffset);
        $stmt->bind_param('sii',$arg1,$arg2,$arg3);
        $stmt->execute();

        $result = $stmt->get_result();
        if (!$result) die($conn->error);
        if ($result->num_rows > 0) {
            $arr = array();
            while ($row = $result->fetch_assoc()) {
                $bloghome = new Bloghome($row['id'],$row['username'],$row['title'],$row['content'],$row['imgUrl'],$row['createDate'],$row['blogCategoryId']);
                $arr[] = $bloghome;
            }
            return $arr;
        }
        else {
            $arr = array();
            return $arr;
        }
    }
}
