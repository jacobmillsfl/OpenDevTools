<?php
/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			12/19/2017
Description:	Creates the DAL class for  ForumComment table and respective stored procedures

*/



class ForumComment {

	// This is for local purposes only! In hosted environments the db_settings.php file should be outside of the webroot, such as: include("/outside-webroot/db_settings.php");
	protected static function getDbSettings() { return "DAL/db_localsettings.php"; }

	/******************************************************************/
	// Properties
	/******************************************************************/

	protected $id;
	protected $forumId;
	protected $userId;
	protected $comment;
	protected $createDate;


	/******************************************************************/
	// Constructors
	/******************************************************************/
	public function __construct() {
		$argv = func_get_args();
		switch( func_num_args() ) {
			case 0:
				self::__constructBase();
				break;
			case 1:
				self::__constructPK( $argv[0] );
				break;
			case 5:
				self::__constructFull( $argv[0], $argv[1], $argv[2], $argv[3], $argv[4] );
		}
	}


	public function __constructBase() {
		$this->id = 0;
		$this->forumId = 0;
		$this->userId = 0;
		$this->comment = "";
		$this->createDate = "";
	}


	public function __constructPK($paramId) {
		$this->load($paramId);
	}


	public function __constructFull($paramId,$paramForumId,$paramUserId,$paramComment,$paramCreateDate) {
		$this->id = $paramId;
		$this->forumId = $paramForumId;
		$this->userId = $paramUserId;
		$this->comment = $paramComment;
		$this->createDate = $paramCreateDate;
	}


	/******************************************************************/
	// Accessors / Mutators
	/******************************************************************/

	public function getId(){
		return $this->id;
	}
	public function setId($value){
		$this->id = $value;
	}
	public function getForumId(){
		return $this->forumId;
	}
	public function setForumId($value){
		$this->forumId = $value;
	}
	public function getUserId(){
		return $this->userId;
	}
	public function setUserId($value){
		$this->userId = $value;
	}
	public function getComment(){
		return $this->comment;
	}
	public function setComment($value){
		$this->comment = $value;
	}
	public function getCreateDate(){
		return $this->createDate;
	}
	public function setCreateDate($value){
		$this->createDate = $value;
	}


	/******************************************************************/
	// Public Methods
	/******************************************************************/


	public function load($paramId) {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_ForumComment_Load(?)');
		$stmt->bind_param('i', $paramId);
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);

		while ($row = $result->fetch_assoc()) {
		 $this->setId($row['id']);
		 $this->setForumId($row['forumId']);
		 $this->setUserId($row['userId']);
		 $this->setComment($row['comment']);
		 $this->setCreateDate($row['createDate']);
		}
	}


	public function save() {
		if ($this->getId() == 0)
			$this->insert();
		else
			$this->update();
	}

	/******************************************************************/
	// Private Methods
	/******************************************************************/



	private function insert() {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_ForumComment_Add(?,?,?,?)');
		$arg1 = $this->getForumId();
		$arg2 = $this->getUserId();
		$arg3 = $this->getComment();
		$arg4 = $this->getCreateDate();
		$stmt->bind_param('iiss',$arg1,$arg2,$arg3,$arg4);
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);
		while ($row = $result->fetch_assoc()) {
			// By default, the DALGen generated INSERT procedure returns the scope identity as id
			$this->load($row['id']);
		}
	}


	private function update() {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_ForumComment_Update(?,?,?,?,?)');
		$arg1 = $this->getId();
		$arg2 = $this->getForumId();
		$arg3 = $this->getUserId();
		$arg4 = $this->getComment();
		$arg5 = $this->getCreateDate();
		$stmt->bind_param('iiiss',$arg1,$arg2,$arg3,$arg4,$arg5);
		$stmt->execute();
	}

	private static function setNullValue($value){
		if ($value == "")
			return null;
		else
			return $value;
	}

	/******************************************************************/
	// Static Methods
	/******************************************************************/



	public static function loadall() {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_ForumComment_LoadAll()');
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);
		if ($result->num_rows > 0) {
			$arr = array();
			while ($row = $result->fetch_assoc()) {
				$forumComment = new ForumComment($row['id'],$row['forumId'],$row['userId'],$row['comment'],$row['createDate']);
				$arr[] = $forumComment;
			}
			return $arr;
		}
		else {
			die("The query yielded zero results.No rows found.");
		}
	}


	public static function remove($paramId) {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_ForumComment_Delete(?)');
		$stmt->bind_param('i', $paramId);
		$stmt->execute();
	}


	public static function search($paramId,$paramForumId,$paramUserId,$paramComment,$paramCreateDate) {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_ForumComment_Search(?,?,?,?,?)');
		$arg1 = ForumComment::setNullValue($paramId);
		$arg2 = ForumComment::setNullValue($paramForumId);
		$arg3 = ForumComment::setNullValue($paramUserId);
		$arg4 = ForumComment::setNullValue($paramComment);
		$arg5 = ForumComment::setNullValue($paramCreateDate);
		$stmt->bind_param('iiiss',$arg1,$arg2,$arg3,$arg4,$arg5);
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);
		if ($result->num_rows > 0) {
			$arr = array();
			while ($row = $result->fetch_assoc()) {
				$forumComment = new ForumComment($row['id'],$row['forumId'],$row['userId'],$row['comment'],$row['createDate']);
				$arr[] = $forumComment;
			}
			return $arr;
		}
		else {
			die("The query yielded zero results.No rows found.");
		}
	}
}
