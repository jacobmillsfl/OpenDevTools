/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			10/15/2017
Description:	Creates the User table and respective stored procedures

*/


USE opendevtools;



-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `opendevtools`.`User` (
id INT AUTO_INCREMENT,
username VARCHAR(255) UNIQUE,
password VARCHAR(255),
email VARCHAR(255),
bio VARCHAR(1047),
location VARCHAR(255),
imgUrl VARCHAR(511),
githubUrl VARCHAR(511),
createDate DATETIME,
roleId INT,
CONSTRAINT pk_User_id PRIMARY KEY (id)
,
CONSTRAINT fk_User_roleId_UserRole_id FOREIGN KEY (roleId) REFERENCES UserRole (id)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_User_Load`
(
	 IN paramid INT
)
BEGIN
	SELECT
		`User`.`id` AS `id`,
		`User`.`username` AS `username`,
		`User`.`password` AS `password`,
		`User`.`email` AS `email`,
		`User`.`bio` AS `bio`,
		`User`.`location` AS `location`,
		`User`.`imgUrl` AS `imgUrl`,
		`User`.`githubUrl` AS `githubUrl`,
		`User`.`createDate` AS `createDate`,
		`User`.`roleId` AS `roleId`
	FROM `User`
	WHERE 		`User`.`id` = paramid;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_User_LoadAll`()
BEGIN
	SELECT
		`User`.`id` AS `id`,
		`User`.`username` AS `username`,
		`User`.`password` AS `password`,
		`User`.`email` AS `email`,
		`User`.`bio` AS `bio`,
		`User`.`location` AS `location`,
		`User`.`imgUrl` AS `imgUrl`,
		`User`.`githubUrl` AS `githubUrl`,
		`User`.`createDate` AS `createDate`,
		`User`.`roleId` AS `roleId`
	FROM `User`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_User_Add`
(
	 IN paramusername VARCHAR(255),
	 IN parampassword VARCHAR(255),
	 IN paramemail VARCHAR(255),
	 IN parambio VARCHAR(1047),
	 IN paramlocation VARCHAR(255),
	 IN paramimgUrl VARCHAR(511),
	 IN paramgithubUrl VARCHAR(511),
	 IN paramcreateDate DATETIME,
	 IN paramroleId INT
)
BEGIN
	INSERT INTO `User` (username,password,email,bio,location,imgUrl,githubUrl,createDate,roleId)
	VALUES (paramusername, parampassword, paramemail, parambio, paramlocation, paramimgUrl, paramgithubUrl, paramcreateDate, paramroleId);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_User_Update`
(
	IN paramid INT,
	IN paramusername VARCHAR(255),
	IN parampassword VARCHAR(255),
	IN paramemail VARCHAR(255),
	IN parambio VARCHAR(1047),
	IN paramlocation VARCHAR(255),
	IN paramimgUrl VARCHAR(511),
	IN paramgithubUrl VARCHAR(511),
	IN paramcreateDate DATETIME,
	IN paramroleId INT
)
BEGIN
	UPDATE `User`
	SET username = paramusername
		,password = parampassword
		,email = paramemail
		,bio = parambio
		,location = paramlocation
		,imgUrl = paramimgUrl
		,githubUrl = paramgithubUrl
		,createDate = paramcreateDate
		,roleId = paramroleId
	WHERE		`User`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_User_Delete`
(
	IN paramid INT
)
BEGIN
	DELETE FROM `User`
	WHERE		`User`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_User_Search`
(
	IN paramid INT,
	IN paramusername VARCHAR(255),
	IN parampassword VARCHAR(255),
	IN paramemail VARCHAR(255),
	IN parambio VARCHAR(1047),
	IN paramlocation VARCHAR(255),
	IN paramimgUrl VARCHAR(511),
	IN paramgithubUrl VARCHAR(511),
	IN paramcreateDate DATETIME,
	IN paramroleId INT
)
BEGIN
	SELECT
		`User`.`id` AS `id`,
		`User`.`username` AS `username`,
		`User`.`password` AS `password`,
		`User`.`email` AS `email`,
		`User`.`bio` AS `bio`,
		`User`.`location` AS `location`,
		`User`.`imgUrl` AS `imgUrl`,
		`User`.`githubUrl` AS `githubUrl`,
		`User`.`createDate` AS `createDate`,
		`User`.`roleId` AS `roleId`
	FROM `User`
	WHERE
		COALESCE(User.`id`,0) = COALESCE(paramid,User.`id`,0)
		AND COALESCE(User.`username`,'') = COALESCE(paramusername,User.`username`,'')
		AND COALESCE(User.`password`,'') = COALESCE(parampassword,User.`password`,'')
		AND COALESCE(User.`email`,'') = COALESCE(paramemail,User.`email`,'')
		AND COALESCE(User.`bio`,'') = COALESCE(parambio,User.`bio`,'')
		AND COALESCE(User.`location`,'') = COALESCE(paramlocation,User.`location`,'')
		AND COALESCE(User.`imgUrl`,'') = COALESCE(paramimgUrl,User.`imgUrl`,'')
		AND COALESCE(User.`githubUrl`,'') = COALESCE(paramgithubUrl,User.`githubUrl`,'')
		AND COALESCE(CAST(User.`createDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramcreateDate AS DATE),CAST(User.`createDate` AS DATE), CAST(NOW() AS DATE))
		AND COALESCE(User.`roleId`,0) = COALESCE(paramroleId,User.`roleId`,0);
END //
DELIMITER ;


