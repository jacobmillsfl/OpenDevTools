/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			10/15/2017
Description:	Creates the BlogComment table and respective stored procedures

*/


USE opendevtools;



--------------------------------------------------------------
-- Create table
--------------------------------------------------------------



CREATE TABLE `opendevtools`.`BlogComment` (
id INT AUTO_INCREMENT,
blogId INT,
userId INT,
comment VARCHAR(32768),
createDate DATETIME,
CONSTRAINT pk_BlogComment_id PRIMARY KEY (id)
,
CONSTRAINT fk_BlogComment_blogId_Blog_id FOREIGN KEY (blogId) REFERENCES Blog (id)
,
CONSTRAINT fk_BlogComment_userId_User_id FOREIGN KEY (userId) REFERENCES User (id)
);


--------------------------------------------------------------
-- Create default SCRUD sprocs for this table
--------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_BlogComment_Load`
(
	 IN paramid INT
)
BEGIN
	SELECT
		`BlogComment`.`id` AS `id`,
		`BlogComment`.`blogId` AS `blogId`,
		`BlogComment`.`userId` AS `userId`,
		`BlogComment`.`comment` AS `comment`,
		`BlogComment`.`createDate` AS `createDate`
	FROM `BlogComment`
	WHERE 		`BlogComment`.`id` = paramid;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_BlogComment_LoadAll`()
BEGIN
	SELECT
		`BlogComment`.`id` AS `id`,
		`BlogComment`.`blogId` AS `blogId`,
		`BlogComment`.`userId` AS `userId`,
		`BlogComment`.`comment` AS `comment`,
		`BlogComment`.`createDate` AS `createDate`
	FROM `BlogComment`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_BlogComment_Add`
(
	 IN paramblogId INT,
	 IN paramuserId INT,
	 IN paramcomment VARCHAR(32768),
	 IN paramcreateDate DATETIME
)
BEGIN
	INSERT INTO `BlogComment` (blogId,userId,comment,createDate)
	VALUES (paramblogId, paramuserId, paramcomment, paramcreateDate);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_BlogComment_Update`
(
	IN paramid INT,
	IN paramblogId INT,
	IN paramuserId INT,
	IN paramcomment VARCHAR(32768),
	IN paramcreateDate DATETIME
)
BEGIN
	UPDATE `BlogComment`
	SET blogId = paramblogId
		,userId = paramuserId
		,comment = paramcomment
		,createDate = paramcreateDate
	WHERE		`BlogComment`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_BlogComment_Delete`
(
	IN paramid INT
)
BEGIN
	DELETE FROM `BlogComment`
	WHERE		`BlogComment`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `opendevtools`.`usp_BlogComment_Search`
(
	IN paramid INT,
	IN paramblogId INT,
	IN paramuserId INT,
	IN paramcomment VARCHAR(32768),
	IN paramcreateDate DATETIME
)
BEGIN
	SELECT
		`BlogComment`.`id` AS `id`,
		`BlogComment`.`blogId` AS `blogId`,
		`BlogComment`.`userId` AS `userId`,
		`BlogComment`.`comment` AS `comment`,
		`BlogComment`.`createDate` AS `createDate`
	FROM `BlogComment`
	WHERE
		COALESCE(BlogComment.`id`,0) = COALESCE(paramid,BlogComment.`id`,0)
		AND COALESCE(BlogComment.`blogId`,0) = COALESCE(paramblogId,BlogComment.`blogId`,0)
		AND COALESCE(BlogComment.`userId`,0) = COALESCE(paramuserId,BlogComment.`userId`,0)
		AND COALESCE(BlogComment.`comment`,'') = COALESCE(paramcomment,BlogComment.`comment`,'')
		AND COALESCE(CAST(BlogComment.`createDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramcreateDate AS DATE),CAST(BlogComment.`createDate` AS DATE), CAST(NOW() AS DATE));
END //
DELIMITER ;


